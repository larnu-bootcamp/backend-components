openapi: 3.0.0
info:
  title: Api notificaciones
  description: creación y manejo de notificaciones
  version: 1.0.0

servers:
  - url: https://backend-components-production.up.railway.app/
    description: servidor de producción
  - url: http://localhost:3000
    description: servidor de pruebas

tags:
  - name: autenticación
    description: end points para autenticar usuarios
  - name: notificaciones
    description: end points para crear, eliminar y editar las notificaciones

paths:
  /auth/register:
    post:
      tags:
        - autenticación
      summary: crear un cuenta
      description: se registra una cuenta en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerUser'
      responses:
        '200':
          description: usuario registrado
        '404':
          description: el usuario ya esta registrado
        '411':
          description: el password debe de tener como mínimo 5 caracteres

  /auth/login:
    post:
      tags:
        - autenticación
      summary: iniciar sesión en la plataforma
      description: inicia sesión y genera un token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
      responses:
        '200':
          description: OK
        '404':
          description: usuario no encontrado

  /notifications:
    get:
      tags:
        - notificaciones
      summary: obtener notificaciones
      description: obtienes un array de notificaciones
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getNotification'
      responses:
        '200':
          description: array de notificaciones
        '404':
          description: no hay notificaciones

  /notification/{id}:
    put:
      tags:
        - notificaciones
      summary:
      description:
      parameters:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadNotification'
      responses:
        '200':
          description:
        '404':
          description:
    delete:
      tags:
        - notificaciones
      summary:
      description:
      parameters:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteNotification'
      responses:
        '200':
          description:
        '404':
          description:

  /notification:
    post:
      tags:
        - notificaciones
      summary: crear notificaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNotification'
      responses:
        '200':
          description:
        '400':
          description:

components:
  securitySchemas:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    registerUser:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: Camilo
        lastName:
          type: string
          example: Torres
        email:
          type: string
          example: camilo@email.com
        password:
          type: string
          example: 12345asd
      requerid:
        - id
        - name
        - lastName
        - email
        - password

    loginUser:
      type: object
      properties:
        email:
          type: string
          example: camilo@email.com
        password:
          type: string
          example: 1234asd
      requerid:
        - email
        - password

    createNotification:
      type: object
      properties:
        id:
          type: integer
          example: 4
        title:
          type: string
          example:
        description:
          type: string
          example:
        img:
          type: string
          example: photo.img
        orientation:
          type: string
          example: android || androidAndIos || Ios
        state:
          type: string
          example: complete || recurrent || programmed
        time:
          type: Date
          example: tiempo en el cual se va a ejecutar o no puede llevar tiempo para ejecutarse en ese instante
      requerid:
        - title
        - description

    getNotification:
      type: object
      properties:
        id:
          type: integer
          example: 4
      requerid:
        - id

    updateNotification:
      id:
        type: integer
        example: 4
      title:
        type: string
        example:
      description:
        type: string
        example:
      img:
        type: string
        example: photo.img
      orientation:
        type: string
        example: android || androidAndIos || IOS
      state:
        type: string
        example: complete || recurrent || programmed
      time:
        type: Date
        example: tiempo en el cual se va a ejecutar o no puede llevar tiempo para ejecutarse en ese instante

    deleteNotification:
      type: object
      properties:
        id:
          type: integer
          example: 4
      requerid:
        - id
